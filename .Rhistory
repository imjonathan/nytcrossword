title = "Lexical Diversity of NYTimes Crosswords by Year",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom()
ggsave(here("images", "cw_ttr.png"), width = 8, height = 6)
crossword %>%
filter(year != "2017") %>%
plyr::ddply(~year, summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point() +
geom_smooth(color = "grey",
linetype = "dashed",
size = 1,
method = "lm",
se = FALSE) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Year",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom()
crossword %>%
filter(year != "2017") %>%
plyr::ddply(~year, summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point() +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = "lm",
se = FALSE) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Year",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom()
crossword %>%
filter(year != "2017") %>%
plyr::ddply(~year, summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point() +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = "lm",
se = FALSE) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Year",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom()
crossword %>%
filter(year != "2017") %>%
plyr::ddply(~year, summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point() +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = "lm",
se = FALSE) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Year",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom()
ggsave(here("images", "cw_ttr.png"), width = 8, height = 6)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
plyr::ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
plyr::ddply(~(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
plyr::ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
?plyr:ddply
?plyr::ddply
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
plyr::ddply(c(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
plyr::ddply(c(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>% View()
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>% View()
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
plyr::ddply(plyr::.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
knitr::opts_chunk$set(echo = TRUE,
fig.width = 8,
fig.height = 6)
# Setup
library(tidyverse)
library(here)
library(plyr)
library(tidytext)
library(stringr)
library(viridis)
options(stringsAsFactors = FALSE)
# Set custom theme
theme_custom <- function(base_size = 12, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
theme_minimal(base_size = base_size, base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size) %+replace%
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "#EEEEEE"),
plot.title = element_text(family = "Asap SemiBold",
size = 16,
hjust = 0,
margin = margin(5, 0, 5, 0),
color = "#0F0F0F"),
plot.subtitle = element_text(family = "Asap",
size = 12,
hjust = 0,
margin = margin(0, 0, 10, 0),
color = "#3F3F3F"),
plot.caption = element_text(family = "Asap",
face = "italic",
size = 8,
hjust = 1,
margin = margin(5, 0, 0, 0)),
axis.ticks = element_blank(),
axis.title = element_text(family = "Asap SemiBold",
size = 12,
face = "plain",
margin = margin(10, 10, 10, 10)),
axis.text.x = element_text(family = "Asap",
size = 10,
face = "plain",
margin = margin(0, 0, 5, 0)),
axis.text.y = element_text(family = "Asap",
size = 10,
face = "plain",
margin = margin(0, 0, 0, 5)),
legend.title = element_text(family = "Asap SemiBold",
size = 10,
color = "#3F3F3F"),
legend.text = element_text(family = "Asap",
size = 10,
color = "#3F3F3F"),
strip.text = element_text(family = "Asap Medium",
size = 10,
color = "#3F3F3F",
margin = margin(10, 10, 10, 10)))
}
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
library(plyr)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio (TTR), \nwhere TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
library(here)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
knitr::opts_chunk$set(echo = TRUE,
fig.width = 8,
fig.height = 6)
# Setup
library(tidyverse)
library(plyr)
library(here)
library(tidytext)
library(stringr)
library(viridis)
options(stringsAsFactors = FALSE)
# Set custom theme
theme_custom <- function(base_size = 12, base_family = "",
base_line_size = base_size/22,
base_rect_size = base_size/22) {
theme_minimal(base_size = base_size, base_family = base_family,
base_line_size = base_line_size,
base_rect_size = base_rect_size) %+replace%
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "#EEEEEE"),
plot.title = element_text(family = "Asap SemiBold",
size = 16,
hjust = 0,
margin = margin(5, 0, 5, 0),
color = "#0F0F0F"),
plot.subtitle = element_text(family = "Asap",
size = 12,
hjust = 0,
margin = margin(0, 0, 10, 0),
color = "#3F3F3F"),
plot.caption = element_text(family = "Asap",
face = "italic",
size = 8,
hjust = 1,
margin = margin(5, 0, 0, 0)),
axis.ticks = element_blank(),
axis.title = element_text(family = "Asap SemiBold",
size = 12,
face = "plain",
margin = margin(10, 10, 10, 10)),
axis.text.x = element_text(family = "Asap",
size = 10,
face = "plain",
margin = margin(0, 0, 5, 0)),
axis.text.y = element_text(family = "Asap",
size = 10,
face = "plain",
margin = margin(0, 0, 0, 5)),
legend.title = element_text(family = "Asap SemiBold",
size = 10,
color = "#3F3F3F"),
legend.text = element_text(family = "Asap",
size = 10,
color = "#3F3F3F"),
strip.text = element_text(family = "Asap Medium",
size = 10,
color = "#3F3F3F",
margin = margin(10, 10, 10, 10)))
}
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave(here("images", "cw_ttr_byday.png"), width = 8, height = 6)
crossword %>%
filter(year != "2017") %>%
filter(cwday != "NA") %>%
mutate(cwday = factor(cwday, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))) %>%
ddply(.(year, cwday), summarise, distinct_words = n_distinct(word), total_words = length(word)) %>%
mutate(TTR = distinct_words / total_words) %>%
ggplot(aes(x = year, y = TTR)) +
geom_point(aes(color = cwday),
show.legend = FALSE) +
scale_color_viridis(discrete = TRUE, option = "viridis") +
geom_smooth(color = "grey",
linetype = "dashed",
size = 0.5,
method = 'lm',
se = FALSE) +
facet_wrap(~cwday, nrow = 1) +
scale_x_continuous(breaks = seq(1996, 2016, 4)) +
labs(x = "Year",
y = "Type-Token Ratio",
title = "Lexical Diversity of NYTimes Crosswords by Day of the Week",
subtitle = "Using puzzles from the Shortz Era (1994-2017). Lexical diversity is measured by Type Token Ratio \n(TTR), where TTR = (number of unique words) / (total number of words)",
caption = "Data source: XWordInfo.com") +
theme_custom() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
crossword %>%
count(word, sort = TRUE) %>%
head(5)
crossword %>%
count(word, sort = TRUE) %>%
head(5)
